//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5456
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://FTR2LO.InternalService/", ConfigurationName="IFTR2LO")]
public interface IFTR2LO
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://FTR2LO.InternalService/IFTR2LO/IsConnectedToFTR2LO", ReplyAction="http://FTR2LO.InternalService/IFTR2LO/IsConnectedToFTR2LOResponse")]
    bool IsConnectedToFTR2LO();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://FTR2LO.InternalService/IFTR2LO/IsConnectedToFTR", ReplyAction="http://FTR2LO.InternalService/IFTR2LO/IsConnectedToFTRResponse")]
    bool IsConnectedToFTR();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://FTR2LO.InternalService/IFTR2LO/IPingFTR", ReplyAction="http://FTR2LO.InternalService/IFTR2LO/IPingFTRResponse")]
    int IPingFTR();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://FTR2LO.InternalService/IFTR2LO/IPingFTRToString", ReplyAction="http://FTR2LO.InternalService/IFTR2LO/IPingFTRToStringResponse")]
    string IPingFTRToString(int status);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface IFTR2LOChannel : IFTR2LO, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class FTR2LOClient : System.ServiceModel.ClientBase<IFTR2LO>, IFTR2LO
{
    
    public FTR2LOClient()
    {
    }
    
    public FTR2LOClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public FTR2LOClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public FTR2LOClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public FTR2LOClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public bool IsConnectedToFTR2LO()
    {
        return base.Channel.IsConnectedToFTR2LO();
    }
    
    public bool IsConnectedToFTR()
    {
        return base.Channel.IsConnectedToFTR();
    }
    
    public int IPingFTR()
    {
        return base.Channel.IPingFTR();
    }
    
    public string IPingFTRToString(int status)
    {
        return base.Channel.IPingFTRToString(status);
    }
}
